AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Slack で映画を 3 本おすすめする Bot

Globals:
  Function:
    Runtime: python3.9
    Timeout: 10
    MemorySize: 256

Resources:
  SessionsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: FileChatSessions
      PrimaryKey:
        Name: sessionId
        Type: String

  FilmateApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: prod

  FilmChatEntryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/filmChatEntry/
      Handler: app.lambda_handler
      Environment:
        Variables:
          SLACK_BOT_TOKEN: '{{resolve:secretsmanager:arn:aws:secretsmanager:ap-northeast-1:088622163445:secret:prod/filmmate/slack-rRHqLA:SecretString:slack_bot_token}}'
          SLACK_SIGNING_SECRET: '{{resolve:secretsmanager:arn:aws:secretsmanager:ap-northeast-1:088622163445:secret:prod/filmmate/slack-rRHqLA:SecretString:slack_signing_secret}}'
          TMDB_KEY: '{{resolve:secretsmanager:arn:aws:secretsmanager:ap-northeast-1:088622163445:secret:prod/filmmate/slack-rRHqLA:SecretString:tmdb_key}}'
          SESSIONS_TABLE: !Ref SessionsTable
          # ここを !GetAtt → !Ref に変更
          CHAT_HANDLER_NAME: !Ref FilmChatFlowFunction
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:ap-northeast-1:088622163445:secret:prod/filmmate/slack-rRHqLA
        - Statement:
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: !GetAtt FilmChatFlowFunction.Arn
      Events:
        SlashCommand:
          Type: HttpApi
          Properties:
            ApiId: !Ref FilmateApi
            Path: /filmChatEntry
            Method: POST

  FilmChatFlowFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/filmChatFlow/
      Handler: app.lambda_handler
      Environment:
        Variables:
          SESSIONS_TABLE: !Ref SessionsTable
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:ap-northeast-1:088622163445:secret:prod/filmmate/slack-rRHqLA

  EventsHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/eventsHandler/
      Handler: app.lambda_handler
      Environment:
        Variables:
          SLACK_SIGNING_SECRET: '{{resolve:secretsmanager:arn:aws:secretsmanager:ap-northeast-1:088622163445:secret:prod/filmmate/slack-rRHqLA:SecretString:slack_signing_secret}}'
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:ap-northeast-1:088622163445:secret:prod/filmmate/slack-rRHqLA
      Events:
        SlackEvents:
          Type: HttpApi
          Properties:
            ApiId: !Ref FilmateApi
            Path: /events
            Method: POST

Outputs:
  HttpApiUrl:
    Description: "Bot の HTTP API ベース URL"
    Value: !Sub "https://${FilmateApi}.execute-api.${AWS::Region}.amazonaws.com/prod"